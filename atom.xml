<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>曾是少年</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://grobenis.github.io/"/>
  <updated>2020-03-24T05:45:09.781Z</updated>
  <id>https://grobenis.github.io/</id>
  
  <author>
    <name>guoben</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>2020-3-24-LeeCode-CheckDaily</title>
    <link href="https://grobenis.github.io/2020/03/24/2020-03-24-LeeCode-CheckDaily/"/>
    <id>https://grobenis.github.io/2020/03/24/2020-03-24-LeeCode-CheckDaily/</id>
    <published>2020-03-24T03:31:10.000Z</published>
    <updated>2020-03-24T05:45:09.781Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今日打卡题目如下：&lt;/p&gt;
&lt;p&gt;面试题17.16、按摩师 【每日打卡24】&lt;/p&gt;
&lt;ol start=&quot;198&quot;&gt;
&lt;li&gt;&lt;p&gt;打家劫舍&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;打家劫舍II&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="刷题" scheme="https://grobenis.github.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="LeeCode" scheme="https://grobenis.github.io/tags/LeeCode/"/>
    
      <category term="每日打卡" scheme="https://grobenis.github.io/tags/%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1/"/>
    
      <category term="刷题" scheme="https://grobenis.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
      <category term="动态规划" scheme="https://grobenis.github.io/tags/%E5%8A%A8%E6%80%81%E8%A7%84%E5%88%92/"/>
    
  </entry>
  
  <entry>
    <title>SLAM初始化</title>
    <link href="https://grobenis.github.io/2020/03/23/SLAM%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    <id>https://grobenis.github.io/2020/03/23/SLAM%E5%88%9D%E5%A7%8B%E5%8C%96/</id>
    <published>2020-03-23T04:23:32.000Z</published>
    <updated>2020-03-23T13:47:12.773Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本节的学习要点：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;初始化的目的(单目/双目)&lt;/li&gt;
&lt;li&gt;初始化的两种方法&lt;/li&gt;
&lt;li&gt;初始化过程&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="SLAM" scheme="https://grobenis.github.io/tags/SLAM/"/>
    
      <category term="初始化" scheme="https://grobenis.github.io/tags/%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
    
      <category term="VO" scheme="https://grobenis.github.io/tags/VO/"/>
    
      <category term="SLAM面试题" scheme="https://grobenis.github.io/tags/SLAM%E9%9D%A2%E8%AF%95%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>LeeCode 每日打卡3-23</title>
    <link href="https://grobenis.github.io/2020/03/23/2020-03-23-LeeCode-CheckDaily/"/>
    <id>https://grobenis.github.io/2020/03/23/2020-03-23-LeeCode-CheckDaily/</id>
    <published>2020-03-23T02:29:04.000Z</published>
    <updated>2020-03-23T03:34:25.739Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;今日打卡题目如下：&lt;/p&gt;
&lt;p&gt;876、链表的中间结点 【每日打卡23】&lt;/p&gt;
&lt;p&gt;190、颠倒二进制位&lt;/p&gt;
&lt;p&gt;191、位1的个数&lt;/p&gt;
    
    </summary>
    
    
      <category term="刷题" scheme="https://grobenis.github.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="LeeCode" scheme="https://grobenis.github.io/tags/LeeCode/"/>
    
      <category term="每日打卡" scheme="https://grobenis.github.io/tags/%E6%AF%8F%E6%97%A5%E6%89%93%E5%8D%A1/"/>
    
      <category term="链表" scheme="https://grobenis.github.io/tags/%E9%93%BE%E8%A1%A8/"/>
    
  </entry>
  
  <entry>
    <title>KMP-Algorithm</title>
    <link href="https://grobenis.github.io/2020/03/22/KMP-Algorithm/"/>
    <id>https://grobenis.github.io/2020/03/22/KMP-Algorithm/</id>
    <published>2020-03-22T06:31:40.000Z</published>
    <updated>2020-03-22T07:29:52.383Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;KMP算法是一种改进的字符串匹配算法，由D.E.Knuth，J.H.Morris和V.R.Pratt提出的，因此人们称它为克努特—莫里斯—普拉特操作（简称KMP算法）。KMP算法的核心是利用匹配失败后的信息，尽量减少模式串与主串的匹配次数以达到快速匹配的目的。具体实现就是通过一个next()函数实现，函数本身包含了模式串的局部匹配信息。KMP算法的时间复杂度O(m+n)。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="C++" scheme="https://grobenis.github.io/tags/C/"/>
    
      <category term="KMP" scheme="https://grobenis.github.io/tags/KMP/"/>
    
  </entry>
  
  <entry>
    <title>LeeCode第181场周赛</title>
    <link href="https://grobenis.github.io/2020/03/22/LeeCode-Contest-181/"/>
    <id>https://grobenis.github.io/2020/03/22/LeeCode-Contest-181/</id>
    <published>2020-03-22T05:40:34.000Z</published>
    <updated>2020-03-22T14:08:36.952Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;第 181 场周赛&lt;/p&gt;
&lt;p&gt;题目列表如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;按既定顺序创建目标数组&lt;/li&gt;
&lt;li&gt;四因数&lt;/li&gt;
&lt;li&gt;检查网络中是否存在有效路径&lt;/li&gt;
&lt;li&gt;最长快乐前缀&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="刷题" scheme="https://grobenis.github.io/categories/%E5%88%B7%E9%A2%98/"/>
    
    
      <category term="C++" scheme="https://grobenis.github.io/tags/C/"/>
    
      <category term="LeeCode" scheme="https://grobenis.github.io/tags/LeeCode/"/>
    
      <category term="周赛" scheme="https://grobenis.github.io/tags/%E5%91%A8%E8%B5%9B/"/>
    
      <category term="刷题" scheme="https://grobenis.github.io/tags/%E5%88%B7%E9%A2%98/"/>
    
  </entry>
  
  <entry>
    <title>Kalman滤波器学习</title>
    <link href="https://grobenis.github.io/2020/03/14/2020-03-13-Kalman_Filter/"/>
    <id>https://grobenis.github.io/2020/03/14/2020-03-13-Kalman_Filter/</id>
    <published>2020-03-13T16:00:00.000Z</published>
    <updated>2020-03-21T08:15:41.095Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;概率图+时间=动态系统&lt;/p&gt;
&lt;p&gt;​    对概率图模型考虑其时间序列，可以得到动态系统。根据动态系统的隐状态的连续性和分布可以把系统大致分为三类：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;若隐状态离散，不要求分布，则为隐马尔可夫模型&lt;/li&gt;
&lt;li&gt;如果隐状态连续、线性且服从高斯分布，则为Kalman滤波器（线性高斯模型）&lt;/li&gt;
&lt;li&gt;如果隐状态连续且非线性，作为得到粒子滤波器&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本节用来介绍kalman滤波器&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="Kalman滤波器" scheme="https://grobenis.github.io/tags/Kalman%E6%BB%A4%E6%B3%A2%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>粒子滤波器</title>
    <link href="https://grobenis.github.io/2020/03/14/2020-03-15-Particle_Filter/"/>
    <id>https://grobenis.github.io/2020/03/14/2020-03-15-Particle_Filter/</id>
    <published>2020-03-13T16:00:00.000Z</published>
    <updated>2020-03-20T12:45:25.283Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="粒子滤波器" scheme="https://grobenis.github.io/tags/%E7%B2%92%E5%AD%90%E6%BB%A4%E6%B3%A2%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>概率图模型</title>
    <link href="https://grobenis.github.io/2020/03/14/2020-03-14-Probability_graph_model/"/>
    <id>https://grobenis.github.io/2020/03/14/2020-03-14-Probability_graph_model/</id>
    <published>2020-03-13T16:00:00.000Z</published>
    <updated>2020-03-22T09:34:30.794Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;概率图模型（ probabilistic graphical model）是一类用图来表达变量相关关系的概率模型。它以图为表示工具，最常见的是用一个结点表示一个或一组随机变量，结点之间的边表示变量间的概率相关关系，即“变量关系图”.根据边的性质不同，概率图模型可大致分为两类：第一类是使用有向无环图表示变量间的依赖关系，称为有向图模型或贝叶斯网（ Bayesian network）；第二类是使用无向图表示变量间的相关关系，称为无向图模型或马尔可夫网（ Markovnetwork）&lt;/p&gt;
&lt;p&gt;本节将用来介绍概率图模型。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="概率图" scheme="https://grobenis.github.io/tags/%E6%A6%82%E7%8E%87%E5%9B%BE/"/>
    
  </entry>
  
  <entry>
    <title>高斯混合模型</title>
    <link href="https://grobenis.github.io/2020/03/14/2020-03-14-GMM/"/>
    <id>https://grobenis.github.io/2020/03/14/2020-03-14-GMM/</id>
    <published>2020-03-13T16:00:00.000Z</published>
    <updated>2020-03-20T13:23:38.131Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;高斯混合模型&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="GMM" scheme="https://grobenis.github.io/tags/GMM/"/>
    
  </entry>
  
  <entry>
    <title>运动一致性判断</title>
    <link href="https://grobenis.github.io/2020/03/14/2020-03-15-Motion_consistency/"/>
    <id>https://grobenis.github.io/2020/03/14/2020-03-15-Motion_consistency/</id>
    <published>2020-03-13T16:00:00.000Z</published>
    <updated>2020-03-20T15:13:26.066Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;直至以来，SLAM的研究共朝着三个方向努力：精度、速度、鲁棒性。尤以鲁棒性居多。通常动态场景中，根据IMU测量值与视觉测量值分别进行计算得到的结果会有所不同。因此需要进行一致性的检测，以得到真值。本文将主要讲运动一致性检测。&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="SLAM" scheme="https://grobenis.github.io/tags/SLAM/"/>
    
  </entry>
  
  <entry>
    <title>DBoW2库学习</title>
    <link href="https://grobenis.github.io/2020/03/10/2020-03-10-Use_DBoW2_to_Loop_Detection/"/>
    <id>https://grobenis.github.io/2020/03/10/2020-03-10-Use_DBoW2_to_Loop_Detection/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-20T12:43:59.591Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文目的是为了更加详细的学习通用的回环检测算法 中的DBoW2库，了解其代码构成&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="DBoW2" scheme="https://grobenis.github.io/tags/DBoW2/"/>
    
      <category term="回环检测" scheme="https://grobenis.github.io/tags/%E5%9B%9E%E7%8E%AF%E6%A3%80%E6%B5%8B/"/>
    
  </entry>
  
  <entry>
    <title>VINS-Fusion代码阅读</title>
    <link href="https://grobenis.github.io/2020/03/10/2020-03-10-Read-VINS-Fusion/"/>
    <id>https://grobenis.github.io/2020/03/10/2020-03-10-Read-VINS-Fusion/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-20T12:38:53.113Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;a id=&quot;more&quot;&gt;&lt;/a&gt;

&lt;h2 id=&quot;Loop-Fusion&quot;&gt;&lt;a href=&quot;#Loop-Fusion&quot; class=&quot;headerlink&quot; title=&quot;Loop Fusion&quot;&gt;&lt;/a&gt;Loop Fusion&lt;/h2&gt;&lt;p&gt;Loop
        
      
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="VINS" scheme="https://grobenis.github.io/tags/VINS/"/>
    
      <category term="代码阅读" scheme="https://grobenis.github.io/tags/%E4%BB%A3%E7%A0%81%E9%98%85%E8%AF%BB/"/>
    
  </entry>
  
  <entry>
    <title>隐马尔可夫模型</title>
    <link href="https://grobenis.github.io/2020/03/10/2020-03-13-HMM_model/"/>
    <id>https://grobenis.github.io/2020/03/10/2020-03-13-HMM_model/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-20T12:44:24.248Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;隐马尔可夫模型是关于时序的概率模型，描述由一个隐藏的马尔可夫链随机生成不可观测的状态的序列，再由各个状态随机生成一个观测而产生观测的序列的过程。&lt;/p&gt;
&lt;p&gt;隐马尔可夫模型是可用于标注问题的统计学习模型，描述有隐藏的马尔科夫链随机生成观测序列的过程，属于生成模型。本文将学习隐马尔可夫模型，着重介绍掌握HMM的模型、应用、及理论推导过程。&lt;/p&gt;
&lt;p&gt;来源：李航的《统计学习方法》&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="HMM" scheme="https://grobenis.github.io/tags/HMM/"/>
    
  </entry>
  
  <entry>
    <title>经典聚类算法调研</title>
    <link href="https://grobenis.github.io/2020/03/10/2020-03-12-Clustering_Survey/"/>
    <id>https://grobenis.github.io/2020/03/10/2020-03-12-Clustering_Survey/</id>
    <published>2020-03-09T16:00:00.000Z</published>
    <updated>2020-03-22T04:48:04.441Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文将盘点六个经典的聚类算法，以便于后续研究。经典的聚类算法主要包括以下六种：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Means-shift聚类&lt;/li&gt;
&lt;li&gt;k-means聚类&lt;/li&gt;
&lt;li&gt;Fuzzy C means聚类&lt;/li&gt;
&lt;li&gt;Medoid shift算法&lt;/li&gt;
&lt;li&gt;Turbopixel算法&lt;/li&gt;
&lt;li&gt;SLIC算法&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="聚类" scheme="https://grobenis.github.io/tags/%E8%81%9A%E7%B1%BB/"/>
    
      <category term="图像分割" scheme="https://grobenis.github.io/tags/%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>利用Kalibr标定双目相机与IMU</title>
    <link href="https://grobenis.github.io/2020/02/15/2020-02-15-Calibrate_IMU_Camera_by_Kalibr/"/>
    <id>https://grobenis.github.io/2020/02/15/2020-02-15-Calibrate_IMU_Camera_by_Kalibr/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-03-20T12:43:07.486Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文介绍如何利用Kalibr标定工具进行双目相机与IMU的联合标定。主要过程包括以下四步：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;生成标定板&lt;/li&gt;
&lt;li&gt;标定双目相机&lt;/li&gt;
&lt;li&gt;标定IMU&lt;/li&gt;
&lt;li&gt;联合标定&lt;/li&gt;
&lt;/ol&gt;
    
    </summary>
    
    
      <category term="实验" scheme="https://grobenis.github.io/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="ROS" scheme="https://grobenis.github.io/tags/ROS/"/>
    
      <category term="IMU" scheme="https://grobenis.github.io/tags/IMU/"/>
    
      <category term="Kalibr" scheme="https://grobenis.github.io/tags/Kalibr/"/>
    
  </entry>
  
  <entry>
    <title>利用ROS标定相机步骤与方法</title>
    <link href="https://grobenis.github.io/2020/02/15/2020-02-15-Calibrate_Camera_by_ROS/"/>
    <id>https://grobenis.github.io/2020/02/15/2020-02-15-Calibrate_Camera_by_ROS/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-03-20T12:42:51.015Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本文讲解利用ROS框架下的工具标定USB相机的过程。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实验" scheme="https://grobenis.github.io/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="ROS" scheme="https://grobenis.github.io/tags/ROS/"/>
    
      <category term="相机标定" scheme="https://grobenis.github.io/tags/%E7%9B%B8%E6%9C%BA%E6%A0%87%E5%AE%9A/"/>
    
  </entry>
  
  <entry>
    <title>发布IMU信息到ROS系统中</title>
    <link href="https://grobenis.github.io/2020/02/15/2020-02-15-Pub_IMU_Message_To_ROS/"/>
    <id>https://grobenis.github.io/2020/02/15/2020-02-15-Pub_IMU_Message_To_ROS/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-03-20T12:43:16.671Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;以下记录是在调试树莓派3b中得到的经验&lt;/p&gt;
&lt;p&gt;​    本文记录调试树莓派3b中得到的经验，如何把IMU信息发布到ROS系统中。&lt;/p&gt;
    
    </summary>
    
    
      <category term="实验" scheme="https://grobenis.github.io/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="ROS" scheme="https://grobenis.github.io/tags/ROS/"/>
    
      <category term="IMU" scheme="https://grobenis.github.io/tags/IMU/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu1604连接蓝牙鼠标</title>
    <link href="https://grobenis.github.io/2020/02/15/2020-02-15-UbuntuBluetooth/"/>
    <id>https://grobenis.github.io/2020/02/15/2020-02-15-UbuntuBluetooth/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-03-20T12:43:34.230Z</updated>
    
    <summary type="html">
    
      
      
        
        
          &lt;p&gt;打开命令行&lt;br&gt;$ sudo -i&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span
        
      
    
    </summary>
    
    
      <category term="实验" scheme="https://grobenis.github.io/categories/%E5%AE%9E%E9%AA%8C/"/>
    
    
      <category term="Ubuntu" scheme="https://grobenis.github.io/tags/Ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>VINS系统解析</title>
    <link href="https://grobenis.github.io/2020/02/15/2020-02-15-VINS_Mono_System/"/>
    <id>https://grobenis.github.io/2020/02/15/2020-02-15-VINS_Mono_System/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-03-20T12:38:28.433Z</updated>
    
    <summary type="html">
    
      &lt;h2 id=&quot;基本框架&quot;&gt;&lt;a href=&quot;#基本框架&quot; class=&quot;headerlink&quot; title=&quot;基本框架&quot;&gt;&lt;/a&gt;基本框架&lt;/h2&gt;&lt;p&gt;基本框架如下图所示&lt;br&gt;&lt;img src=&quot;/images/VINS%E8%A7%A3%E6%9E%90/VINS%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B.png&quot; alt=&quot;image-20191202164309191&quot;&gt;&lt;/p&gt;
    
    </summary>
    
    
      <category term="学习" scheme="https://grobenis.github.io/categories/%E5%AD%A6%E4%B9%A0/"/>
    
    
      <category term="VINS" scheme="https://grobenis.github.io/tags/VINS/"/>
    
  </entry>
  
  <entry>
    <title>VIO主流框架</title>
    <link href="https://grobenis.github.io/2020/02/15/2020-02-15-VIO_Framework/"/>
    <id>https://grobenis.github.io/2020/02/15/2020-02-15-VIO_Framework/</id>
    <published>2020-02-14T16:00:00.000Z</published>
    <updated>2020-02-18T03:24:57.314Z</updated>
    
    <summary type="html">
    
      &lt;p&gt;本节主要说明当前主流的VIO算法流程。课程来源于&lt;a href=&quot;https://www.bilibili.com/video/av44472237?t=297&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;B站&lt;/a&gt;。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="VINS" scheme="https://grobenis.github.io/tags/VINS/"/>
    
      <category term="VIO" scheme="https://grobenis.github.io/tags/VIO/"/>
    
  </entry>
  
</feed>
